#include <unistd.h>
#include <string.h>
#include <err.h>
#include <stdlib.h>
#include <sys/wait.h>

int main(void) {
    const char prompt[] = "Input command:\n";

    while(1) {
        if (write(1, prompt, strlen(prompt)) < 0) {
            err(1, "Could not write");
        }

        char buff[4096];
        int len;
        if ((len = read(0, &buff, sizeof(buff))) > 0) {
            buff[len - 1] = '\0';
        }

        if (len == -1) {
            err(2, "Could not read command");
        }

        if (strcmp(buff, "exit") == 0) {
            exit(0);
        }

        int pid = fork();
        if (pid < 0) {
            err(3, "Could not fork");
        }

        if (pid == 0) {
            if (execlp(buff, buff, (char*)NULL) < 0) {
                err(4, "Could not execute the command");
            }
        }

        int status;
        if (wait(&status) < 0) {
            err(5, "Can't wait");
        }

        if (!WIFEXITED(status)) {
            err(6, "Child was not exited normally");
        }

        if (WEXITSTATUS(status) != 0) {
            err(7, "Child status != 0");
        }
    }
}
