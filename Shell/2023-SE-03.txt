#!/bin/bash

if [[ "${#}" -ne 1 ]]; then
    echo "Invalid number of args"
    exit 1
fi

if [[ ! -d "${1}" ]]; then
    echo "The first arg must be a dir"
    exit 2
fi

dir_name="${1}"

files_count=$(find "${dir_name}" -mindepth 1 -type f | wc -l)
half_count=$(( $files_count  / 2 ))
#echo $half_count

words_file=$(mktemp)
while read file; do
    while read word; do
        if ! grep -E -q "^${word}$" "${words_file}"; then
            echo "${word}" >> "${words_file}"
        fi
    done < <(cat "${file}" | grep -E '[a-z]+' | tr -cs 'a-z' '\n') #vsichko, koeto ne e bukva go pravi na nov red

done < <(find "${dir_name}" -mindepth 1 -type f)
stop_words=$(mktemp)

while read word; do
    word_files=0
    total_word_count=0
    while read file; do
        #word_count=$(tr -cs 'a-z' '\n' < "${file}" | grep -x "${word}" | wc -l)
        word_count=$(cat "${file}" | tr -cs 'a-z' '\n' | grep -E "${word}" | wc -l)
        #word_count=$(cat "${file}" | grep -E "\b${word}\b" | tr -cs 'a-z' '\n'| wc -l)
        #echo "${word_count} ${word}"
        if [[ $word_count -ge 3 ]]; then
            word_files=$(( $word_files + 1 ))
        fi
        total_word_count=$(( $total_word_count + $word_count ))

    done < <(find "${dir_name}" -mindepth 1 -type f)

    if [[ ${word_files} -ge ${half_count} ]]; then
        echo "${word},${total_word_count}" >> "${stop_words}"
    fi
done < "${words_file}"

cat "${stop_words}" | sort -n -t ',' -k 2 -r | head -n 10 | cut -d ',' -f 1
